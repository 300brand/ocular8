#!/usr/bin/env python2
import argparse
import dateutil.parser
import goose
import lxml
import pymongo
import bson

def process(db, article, nsq):
	if article['html'] is None or len(article['html']) == 0:
		print(article['_id'], "NO HTML")
		return

	g = goose.Goose({
		'enable_image_fetching':False
	})
	a = g.extract(raw_html=article['html'])

	update = {
		'$set': {
			'bodyhtml': lxml.etree.tostring(a.top_node, pretty_print=False),
			'bodytext': a.cleaned_text,
			'goose': {
				'authors': a.authors,
				'published': dateutil.parser.parse(a.publish_date),
				'title': a.title
			}
		}
	}

	if a.title != '':
		update['$set']['title'] = a.title

	if len(a.authors) > 0:
		update['$set']['author'] = a.authors[0]

	if a.publish_date is not None:
		update['$set']['published'] = dateutil.parser.parse(a.publish_date)

	db.articles.update({ '_id': article['_id'] }, update, multi=False)

def main():
	parser = argparse.ArgumentParser(description='Download articles and push into queue for processing')
	parser.add_argument('-mongo', help='MongoDB connection string', default='mongodb://localhost:27017/ocular8')
	parser.add_argument('-nsqdhttp', help='NSQd HTTP address', default='http://localhost:4151')
	parser.add_argument('id', help='feed_article IDs', nargs='+')
	args = parser.parse_args()

	db = pymongo.MongoClient(args.mongo).get_default_database()
	bson_ids = [ bson.objectid.ObjectId(id) for id in args.id ]
	for id in bson_ids:
		article = db.articles.find_one(id)
		try:
			process(db, article, args.nsqdhttp)

			payload = str(article['_id']).encode('utf-8')
			urllib.request.urlopen("%s/pub?topic=article.id.elastic" % nsq, data=payload)
			print(article['_id'], 'SENT')
		except Exception as err:
			print id, str(err)

if __name__ == '__main__':
	main()
